#!/usr/bin/env python3
import time
import os

print("üëÄ –ú–û–ù–ò–¢–û–†–ò–ù–ì –õ–û–ì–û–í WEBHOOK")
print("=" * 40)

def monitor_logs():
    log_file = '/var/www/html/meetRiedeBot/logs/webhook_debug.log'
    
    print(f"üìÅ –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º —Ñ–∞–π–ª: {log_file}")
    print("‚è∞ –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
    print("-" * 40)
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
        if not os.path.exists(log_file):
            print(f"‚ùå –§–∞–π–ª {log_file} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            print("üí° –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—É—Ç—å")
            return
        
        # –ß–∏—Ç–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏
        with open(log_file, 'r') as f:
            lines = f.readlines()
            print(f"üìä –í—Å–µ–≥–æ —Å—Ç—Ä–æ–∫ –≤ –ª–æ–≥–µ: {len(lines)}")
            
            if lines:
                print("\nüìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –∑–∞–ø–∏—Å–µ–π:")
                for line in lines[-5:]:
                    print(f"   {line.strip()}")
            else:
                print("üìù –õ–æ–≥ –ø—É—Å—Ç–æ–π")
        
        print("\nüîÑ –ù–∞—á–∏–Ω–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥...")
        print("   (–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫–∏)")
        
        # –ú–æ–Ω–∏—Ç–æ—Ä–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞
        last_size = os.path.getsize(log_file)
        
        while True:
            time.sleep(1)
            
            current_size = os.path.getsize(log_file)
            
            if current_size > last_size:
                print(f"\nüÜï –ù–û–í–ê–Ø –ó–ê–ü–ò–°–¨ –í –õ–û–ì–ï ({time.strftime('%H:%M:%S')}):")
                
                with open(log_file, 'r') as f:
                    lines = f.readlines()
                    new_lines = lines[last_size:]
                    
                    for line in new_lines:
                        print(f"   {line.strip()}")
                
                last_size = current_size
                
    except KeyboardInterrupt:
        print("\n\n‚èπÔ∏è  –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    monitor_logs()
